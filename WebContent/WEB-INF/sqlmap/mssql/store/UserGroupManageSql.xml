<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.msp.admin.store.userGroup.mapper.UserGroupManageDao">
<!--   =================================================================================================  -->
<!--  begin of paging query  -->
<!--   =================================================================================================  -->

<!--  head of paging query  -->
<sql id="head">
WITH 
PAGE_INFO AS
(
	SELECT #{PAGE_SIZE} PAGE_SIZE
	, #{PAGE_NUM} PAGE_NUM
)
, LST AS
(
	SELECT *
	,		ROW_NUMBER() OVER (<choose>
								<when  test="ORDER_TARGET != null and ORDER_TARGET != ''">
									<if test="ORDER_TYPE == 'DESC' ">
										<if test="ORDER_TARGET == 'APP_IDX' ">
										   ORDER BY  APP_IDX DESC
										</if>
									    <if test="ORDER_TARGET == 'APP_NM' ">
										    ORDER BY  APP_NM DESC
										</if>	
									    <if test="ORDER_TARGET == 'PLATFORM' ">
										    ORDER BY  PLATFORM DESC
										</if>
									    <if test="ORDER_TARGET == 'SVC_ID' ">
										    ORDER BY  SVC_ID DESC
										</if>
									     <if test="ORDER_TARGET == 'CATG_CD' ">
										    ORDER BY  CATG_CD DESC
										</if>
									     <if test="ORDER_TARGET == 'STS_CD' ">
										    ORDER BY  STS_CD DESC
										</if> 
									
									    <if test="ORDER_TARGET == 'GRP_ID' ">
										    ORDER BY  GRP_ID DESC
										</if>
									    <if test="ORDER_TARGET == 'GRP_NM' ">
										    ORDER BY  GRP_NM DESC
										</if>
									    <if test="ORDER_TARGET == 'USE_YN' ">
										    ORDER BY  USE_YN DESC
										</if>
										<if test="ORDER_TARGET == 'REG_DT' ">
										    ORDER BY  REG_DT DESC
										</if>
										<if test="ORDER_TARGET == 'REG_ID' ">
										    ORDER BY  REG_ID DESC
										</if>
										<if test="ORDER_TARGET == 'PLAT_IDX' ">
										   ORDER BY  PLAT_IDX DESC
										</if>
										<if test="ORDER_TARGET == 'BIN_VER' ">
										    ORDER BY  BIN_VER DESC
										</if>
										<if test="ORDER_TARGET == 'RSC_ID' ">
									    		ORDER BY  RSC_ID DESC
										</if>
										<if test="ORDER_TARGET == 'FILE_NM' ">
									    		ORDER BY  FILE_NM DESC
										</if>
										<if test="ORDER_TARGET == 'DPLY_VER' ">
											ORDER BY  DPLY_VER DESC
										</if>
										<if test="ORDER_TARGET == 'DPLY_IDX' ">
											ORDER BY  DPLY_IDX DESC
										</if>
										<if test="ORDER_TARGET == 'DPLY_NM' ">
										    ORDER BY  DPLY_NM DESC
										</if>
										<if test="ORDER_TARGET == 'REG_DTTM' ">
										    ORDER BY  REG_DTTM DESC
										</if>	
										<if test="ORDER_TARGET == 'MOD_DTTM' ">
										    ORDER BY  MOD_DTTM DESC
										</if>	
										<if test="ORDER_TARGET == 'DPLY_TP' ">
										    ORDER BY  DPLY_TP DESC
										</if>
										<if test="ORDER_TARGET == 'USE_YN' ">
										    ORDER BY  USE_YN DESC
										</if>
										<if test="ORDER_TARGET == 'FILE_EXT' ">
										    ORDER BY  FILE_EXT DESC
										</if>
										<if test="ORDER_TARGET == 'FILE_SIZE' ">
										    ORDER BY  FILE_SIZE DESC
										</if>
									</if>
									<if test="ORDER_TYPE == 'ASC' ">
										<if test="ORDER_TARGET == 'APP_IDX' ">
										   ORDER BY  APP_IDX ASC
										</if>
									    <if test="ORDER_TARGET == 'APP_NM' ">
										    ORDER BY  APP_NM ASC
										</if>	
									    <if test="ORDER_TARGET == 'PLATFORM' ">
										    ORDER BY  PLATFORM ASC
										</if>
									    <if test="ORDER_TARGET == 'SVC_ID' ">
										    ORDER BY  SVC_ID ASC
										</if>
									     <if test="ORDER_TARGET == 'CATG_CD' ">
										    ORDER BY  CATG_CD ASC
										</if>
									     <if test="ORDER_TARGET == 'STS_CD' ">
										    ORDER BY  STS_CD ASC
										</if> 
									
									    <if test="ORDER_TARGET == 'GRP_ID' ">
										    ORDER BY  GRP_ID ASC
										</if>
									    <if test="ORDER_TARGET == 'GRP_NM' ">
										    ORDER BY  GRP_NM ASC
										</if>
									    <if test="ORDER_TARGET == 'USE_YN' ">
										    ORDER BY  USE_YN ASC
										</if>
										<if test="ORDER_TARGET == 'REG_DT' ">
										    ORDER BY  REG_DT ASC
										</if>
										<if test="ORDER_TARGET == 'REG_ID' ">
										    ORDER BY  REG_ID ASC
										</if>
										<if test="ORDER_TARGET == 'PLAT_IDX' ">
										   ORDER BY  PLAT_IDX ASC
										</if>
										<if test="ORDER_TARGET == 'BIN_VER' ">
										    ORDER BY  BIN_VER ASC
										</if>
										<if test="ORDER_TARGET == 'RSC_ID' ">
									    		ORDER BY  RSC_ID ASC
										</if>
										<if test="ORDER_TARGET == 'FILE_NM' ">
									    		ORDER BY  FILE_NM ASC
										</if>
										<if test="ORDER_TARGET == 'DPLY_VER' ">
											ORDER BY  DPLY_VER ASC
										</if>
										<if test="ORDER_TARGET == 'DPLY_IDX' ">
											ORDER BY  DPLY_IDX ASC
										</if>
										<if test="ORDER_TARGET == 'DPLY_NM' ">
										    ORDER BY  DPLY_NM ASC
										</if>
										<if test="ORDER_TARGET == 'REG_DTTM' ">
										    ORDER BY  REG_DTTM ASC
										</if>	
										<if test="ORDER_TARGET == 'MOD_DTTM' ">
										    ORDER BY  MOD_DTTM ASC
										</if>	
										<if test="ORDER_TARGET == 'DPLY_TP' ">
										    ORDER BY  DPLY_TP ASC
										</if>
										<if test="ORDER_TARGET == 'USE_YN' ">
										    ORDER BY  USE_YN ASC
										</if>
										<if test="ORDER_TARGET == 'FILE_EXT' ">
										    ORDER BY  FILE_EXT ASC
										</if>
										<if test="ORDER_TARGET == 'FILE_SIZE' ">
										    ORDER BY  FILE_SIZE ASC
										</if>
									</if>
								</when >
								<otherwise>ORDER BY PAGE_KEY</otherwise >
								</choose>) RNUM
	FROM
	(
</sql>
	
	<!--  tail of paging query  -->
<sql id="bottom">
	) A
)
SELECT TOP (SELECT PAGE_SIZE FROM PAGE_INFO) *
, (SELECT COUNT(1) FROM LST) TOT_CNT
FROM LST 
WHERE	PAGE_KEY NOT IN
		(
			SELECT TOP (((SELECT PAGE_NUM FROM PAGE_INFO)  - 1) * (SELECT PAGE_SIZE FROM PAGE_INFO) ) PAGE_KEY
			FROM LST 
		)
</sql>
<!--   =================================================================================================  -->
<!--  end of paging query  -->
<!--   =================================================================================================  -->
    
    
	<!--  사용자그룹 리스트 조회  -->
	<select id="selectUserGroupList"   parameterType="kr.msp.admin.store.userGroup.dto.UserGroupSearchDto"   resultType="kr.msp.admin.store.userGroup.dto.UserGroupDto">
        /*  UserGroupManageSql   SelectUserGroupList*/
	    <include refid="head"/>
	      SELECT * FROM
	      (  
	         SELECT A.UG_IDX, A.GRP_ID, B.GRP_NM, A.EMP_NO, C.EMP_NM ,  C.USERID, CONVERT(VARCHAR(10), A.REG_DT, 102) REG_DT,
	                C.EMP_CD, (SELECT CD_NM FROM TB_STO_EMP_CODE WHERE EMP_CD = C.EMP_CD) CD_NM
	         <choose>
	             <when  test="ORDER_TARGET != null and ORDER_TARGET != ''">
					<if test="ORDER_TYPE == 'DESC' ">
					    <if test="ORDER_TARGET == 'APP_IDX' ">
						   , ROW_NUMBER() OVER(ORDER BY  APP_IDX DESC) PAGE_KEY
						</if>
					    <if test="ORDER_TARGET == 'APP_NM' ">
						   , ROW_NUMBER() OVER(ORDER BY  APP_NM DESC) PAGE_KEY
						</if>	
					    <if test="ORDER_TARGET == 'PLATFORM' ">
						   , ROW_NUMBER() OVER(ORDER BY  PLATFORM DESC) PAGE_KEY
						</if>
					    <if test="ORDER_TARGET == 'SVC_ID' ">
						   , ROW_NUMBER() OVER(ORDER BY  SVC_ID DESC) PAGE_KEY
						</if>
					     <if test="ORDER_TARGET == 'CATG_CD' ">
						   , ROW_NUMBER() OVER(ORDER BY  CATG_CD DESC) PAGE_KEY
						</if>
					     <if test="ORDER_TARGET == 'STS_CD' ">
						   , ROW_NUMBER() OVER(ORDER BY  STS_CD DESC) PAGE_KEY
						</if> 
					
					    <if test="ORDER_TARGET == 'GRP_ID' ">
						   , ROW_NUMBER() OVER(ORDER BY  GRP_ID DESC) PAGE_KEY
						</if>
					    <if test="ORDER_TARGET == 'GRP_NM' ">
						   , ROW_NUMBER() OVER(ORDER BY  GRP_NM DESC) PAGE_KEY
						</if>
					    <if test="ORDER_TARGET == 'USE_YN' ">
						   , ROW_NUMBER() OVER(ORDER BY  USE_YN DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'REG_DT' ">
						   , ROW_NUMBER() OVER(ORDER BY  REG_DT DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'REG_ID' ">
						   , ROW_NUMBER() OVER(ORDER BY  REG_ID DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'PLAT_IDX' ">
						   , ROW_NUMBER() OVER(ORDER BY  PLAT_IDX DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'BIN_VER' ">
						    , ROW_NUMBER() OVER(ORDER BY  BIN_VER DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'RSC_ID' ">
							, ROW_NUMBER() OVER(ORDER BY  RSC_ID DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'FILE_NM' ">
							, ROW_NUMBER() OVER(ORDER BY  FILE_NM DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'DPLY_VER' ">
							, ROW_NUMBER() OVER(ORDER BY  DPLY_VER DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'DPLY_NM' ">
						    , ROW_NUMBER() OVER(ORDER BY  DPLY_NM DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'REG_DTTM' ">
    						    , ROW_NUMBER() OVER(ORDER BY  REG_DTTM DESC) PAGE_KEY
						</if>	
						<if test="ORDER_TARGET == 'MOD_DTTM' ">
    						    , ROW_NUMBER() OVER(ORDER BY  MOD_DTTM DESC) PAGE_KEY
						</if>	
						<if test="ORDER_TARGET == 'DPLY_TP' ">
						    , ROW_NUMBER() OVER(ORDER BY  DPLY_TP DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'USE_YN' ">
   						    , ROW_NUMBER() OVER(ORDER BY  USE_YN DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'FILE_EXT' ">
						    , ROW_NUMBER() OVER(ORDER BY  FILE_EXT DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'FILE_SIZE' ">
						    , ROW_NUMBER() OVER(ORDER BY  FILE_SIZE DESC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'DPLY_IDX' ">
							, ROW_NUMBER() OVER(ORDER BY DPLY_IDX DESC) PAGE_KEY
						</if>
					</if>
					<if test="ORDER_TYPE == 'ASC' ">
					    <if test="ORDER_TARGET == 'APP_IDX' ">
						   , ROW_NUMBER() OVER(ORDER BY  APP_IDX ASC) PAGE_KEY
						</if>
					    <if test="ORDER_TARGET == 'APP_NM' ">
						   , ROW_NUMBER() OVER(ORDER BY  APP_NM ASC) PAGE_KEY
						</if>	
					    <if test="ORDER_TARGET == 'PLATFORM' ">
						   , ROW_NUMBER() OVER(ORDER BY  PLATFORM ASC) PAGE_KEY
						</if>
					    <if test="ORDER_TARGET == 'SVC_ID' ">
						   , ROW_NUMBER() OVER(ORDER BY  SVC_ID ASC) PAGE_KEY
						</if>
					     <if test="ORDER_TARGET == 'CATG_CD' ">
						   , ROW_NUMBER() OVER(ORDER BY  CATG_CD ASC) PAGE_KEY
						</if>
					     <if test="ORDER_TARGET == 'STS_CD' ">
						   , ROW_NUMBER() OVER(ORDER BY  STS_CD ASC) PAGE_KEY
						</if>
					    <if test="ORDER_TARGET == 'GRP_ID' ">
						   , ROW_NUMBER() OVER(ORDER BY  GRP_ID ASC) PAGE_KEY
						</if>
					    <if test="ORDER_TARGET == 'GRP_NM' ">
						   , ROW_NUMBER() OVER(ORDER BY  GRP_NM ASC) PAGE_KEY
						</if>
					    <if test="ORDER_TARGET == 'USE_YN' ">
						   , ROW_NUMBER() OVER(ORDER BY  USE_YN ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'REG_DT' ">
						   , ROW_NUMBER() OVER(ORDER BY  REG_DT ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'REG_ID' ">
						   , ROW_NUMBER() OVER(ORDER BY  REG_ID ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'PLAT_IDX' ">
						   , ROW_NUMBER() OVER(ORDER BY  PLAT_IDX ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'BIN_VER' ">
						    , ROW_NUMBER() OVER(ORDER BY  BIN_VER ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'RSC_ID' ">
							, ROW_NUMBER() OVER(ORDER BY  RSC_ID ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'FILE_NM' ">
							, ROW_NUMBER() OVER(ORDER BY  FILE_NM ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'DPLY_VER' ">
							, ROW_NUMBER() OVER(ORDER BY  DPLY_VER ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'DPLY_NM' ">
						    , ROW_NUMBER() OVER(ORDER BY  DPLY_NM ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'REG_DTTM' ">
    						    , ROW_NUMBER() OVER(ORDER BY  REG_DTTM ASC) PAGE_KEY
						</if>	
						<if test="ORDER_TARGET == 'MOD_DTTM' ">
    						    , ROW_NUMBER() OVER(ORDER BY  MOD_DTTM ASC) PAGE_KEY
						</if>	
						<if test="ORDER_TARGET == 'DPLY_TP' ">
						    , ROW_NUMBER() OVER(ORDER BY  DPLY_TP ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'USE_YN' ">
   						    , ROW_NUMBER() OVER(ORDER BY  USE_YN ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'FILE_EXT' ">
						    , ROW_NUMBER() OVER(ORDER BY  FILE_EXT ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'FILE_SIZE' ">
						    , ROW_NUMBER() OVER(ORDER BY  FILE_SIZE ASC) PAGE_KEY
						</if>
						<if test="ORDER_TARGET == 'DPLY_IDX' ">
							, ROW_NUMBER() OVER(ORDER BY  DPLY_IDX ASC) PAGE_KEY
						</if>
					</if>
				</when>
	             <otherwise>
	        ,		ROW_NUMBER() OVER(ORDER BY A.UG_IDX) PAGE_KEY
	             </otherwise>
	         </choose>
			FROM TB_STO_USERGROUP A, TB_STO_GROUP  B, TB_STO_USER C
			WHERE A.GRP_ID = B.GRP_ID
			AND A.EMP_NO = C.EMP_NO
			AND A.USE_YN = 'Y'
			AND B.USE_YN =  'Y'
			AND C.USE_YN =  'Y'
		    <if test="SEARCH_EMP_NM != null and SEARCH_EMP_NM != '' ">
		        AND C.EMP_NM LIKE '%' + #{SEARCH_EMP_NM} + '%'
	        </if>
            <if test="SEARCH_GRP_NM != null and SEARCH_GRP_NM != '' ">
                AND B.GRP_NM LIKE '%' + #{SEARCH_GRP_NM} + '%'
            </if>
          )  
         
        <include refid="bottom"/>    
    </select>
    	  
	<!--  그룹 리스트 조회  -->
    <select id="SelectGroupList"   parameterType="kr.msp.admin.store.userGroup.dto.UserGroupDto"   resultType="kr.msp.admin.store.userGroup.dto.UserGroupDto">
        /*  UserGroupManageSql   selectGroupList*/
        SELECT GRP_ID, GRP_NM, REG_DT,  ROW_NUMBER() OVER(ORDER BY GRP_ID ) RNUM
		FROM TB_STO_GROUP
		WHERE USE_YN = 'Y'
    </select>
    
    <!--  사용자 리스트 조회  -->
    <select id="selectUserList"   parameterType="kr.msp.admin.store.userGroup.dto.UserGroupDto"   resultType="kr.msp.admin.store.userGroup.dto.UserDto">
        /*  UserGroupManageSql   SelectUserList*/
			SELECT A.EMP_NO, A.EMP_NM, A.USERID, A.EMP_CD,  (SELECT CD_NM FROM TB_STO_EMP_CODE WHERE EMP_CD = A.EMP_CD) EMP_CD_NM
			, ROW_NUMBER() OVER(ORDER BY A.EMP_NO)  RNUM
			FROM TB_STO_USER A
			WHERE A.USE_YN = 'Y'
    </select>
	
    <!--  사용자그룹 저장 -->
    <!--  
    <update id="saveUserGroup" parameterType="kr.msp.admin.store.userGroup.dto.UserGroupDto">
        /*  UserGroupManageSql saveUserGroup  */
        MERGE INTO TB_STO_USERGROUP
        USING DUAL
        ON (
            GRP_ID   = #{GRP_ID}
            AND EMP_NO = #{EMP_NO}
            AND USE_YN = 'Y'
        ) 
        WHEN NOT MATCHED THEN
        INSERT (
             GRP_ID, EMP_NO, REG_ID, REG_DT, USE_YN
        ) VALUES(
            #{GRP_ID},
            #{EMP_NO},
            #{REG_ID},
            GETDATE(),
            'Y'
        )
    </update>
      -->
    <select id="selectUserGroupCount" parameterType="kr.msp.admin.store.userGroup.dto.UserGroupDto" resultType="int">
        /*  UserGroupManageSql saveUserGroup  */
        SELECT 	COUNT(1) 
        FROM		TB_STO_USERGROUP
        WHERE 	GRP_ID   = #{GRP_ID}
            AND 		EMP_NO = #{EMP_NO}
            AND 		USE_YN = 'Y'
    </select>
    <insert id="insertUserGroup" parameterType="kr.msp.admin.store.userGroup.dto.UserGroupDto">
        /*  UserGroupManageSql saveUserGroup  */
        INSERT INTO TB_STO_USERGROUP
        (
             GRP_ID, EMP_NO, REG_ID, REG_DT, USE_YN
        ) VALUES(
            #{GRP_ID},
            #{EMP_NO},
            #{REG_ID},
            GETDATE(),
            'Y'
        )
    </insert>
    
    <!--  사용자그룹 삭제 -->
    <update id="deleteUserGroup" parameterType="kr.msp.admin.store.userGroup.dto.UserGroupDto">
       /* UserGroupManageSql  deleteUserGroup  */
        UPDATE TB_STO_USERGROUP
        SET USE_YN = 'N'
         , MOD_ID      = #{MOD_ID} 
         , MOD_DT = GETDATE()
        WHERE  UG_IDX = #{UG_IDX}
    </update>
   
</mapper>
