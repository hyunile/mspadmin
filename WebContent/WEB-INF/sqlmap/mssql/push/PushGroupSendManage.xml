<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.msp.admin.push.groupSend.mapper.GroupSendManageDao">
<!-- 이 쿼리는 대상 테이블이 존재하지 않음. admin/push/groupSend/ url에 맵핑된 서비스 로직이 
   		있기는 함. 사용하지 않는 기능일 경우 차후 서비스 로직과 SQL 제거 필요. -->

<!--   =================================================================================================  -->
<!--  begin of paging query  -->
<!--   =================================================================================================  -->

<!--  head of paging query  -->
<sql id="head">
WITH 
PAGE_INFO AS
(
	SELECT CONVERT(integer, #{PAGE_SIZE}) PAGE_SIZE
	, CONVERT(integer, #{PAGE_NUM}) PAGE_NUM
)
, LST AS
(
	SELECT *
	,		ROW_NUMBER() OVER (ORDER BY PAGE_KEY) RNUM
	FROM
	(
</sql>
	
	<!--  tail of paging query  -->
<sql id="bottom">
	) A
)
SELECT TOP (SELECT PAGE_SIZE FROM PAGE_INFO) *
, (SELECT COUNT(1) FROM LST) TOT_CNT
FROM LST 
WHERE	PAGE_KEY NOT IN
		(
			SELECT TOP (((SELECT PAGE_NUM FROM PAGE_INFO)  - 1) * (SELECT PAGE_SIZE FROM PAGE_INFO) ) PAGE_KEY
			FROM LST 
		)
</sql>
<!--   =================================================================================================  -->
<!--  end of paging query  -->
<!--   =================================================================================================  -->
    
	
	<!--  그룹 발송 조회 리스트  -->
    <select id="SelectGroupSendList" parameterType="kr.msp.admin.push.groupSend.dto.GroupSendDto" resultType="kr.msp.admin.push.groupSend.dto.GroupSendDto">
        <include refid="head"/>
           SELECT 
			    D.MSGGRPSEQNO
			   ,D.SEQNO
			   ,D.RESERVEDATE
			   ,D.RESERVE_TYPE
			   ,D.APPID
			   ,D.GROUPSEQ
			   ,D.SENDERSEQ
			   ,D.SENDERCODE
			   ,D.MESSAGE
			   ,D.REGDATE
			   ,D.STATE
			   , D.PAGE_KEY
			FROM (
			        SELECT 
			            A.MSGGRPSEQNO
			           ,A.SEQNO
			           ,CONVERT(VARCHAR(19), A.RESERVEDATE, 121) AS RESERVEDATE  
			           ,CASE WHEN A.RESERVEDATE = A.REGDATE
			                 THEN 'I'
			                 ELSE 'R'
			            END AS RESERVE_TYPE
			           ,A.APPID
			           ,A.GROUPSEQ
			           ,A.SENDERSEQ
			           ,(SELECT SENDERCODE
			               FROM T_PUSH_SENDER_INFO C
			              WHERE A.SENDERSEQ = C.SENDERSEQ) AS SENDERCODE
			           ,A.MESSAGE
			           ,CONVERT(VARCHAR(19), A.REGDATE, 121) AS REGDATE
			           ,A.STATE
			           , ROW_NUMBER() OVER(ORDER BY MSGGRPSEQNO DESC) PAGE_KEY
			        FROM T_PUSH_MESSAGE_GROUP A
			        WHERE A.RESERVEDATE BETWEEN (SELECT CONVERT(DATETIME, SUBSTRING(DT, 1, 8) + ' ' + SUBSTRING(DT, 9, 2) + ':' + SUBSTRING(DT, 11, 2)) FROM( SELECT #{RESERVEDATE_S} DT ) A) 
			              											  AND (SELECT CONVERT(DATETIME, SUBSTRING(DT, 1, 8) + ' ' + SUBSTRING(DT, 9, 2) + ':' + SUBSTRING(DT, 11, 2)) FROM( SELECT #{RESERVEDATE_E} DT ) A)			        												 
			              AND A.APPID = #{APPID}
			              <if test="SENDERSEQ != null and SENDERSEQ != ''">
			              	AND A.SENDERSEQ = #{SENDERSEQ}
			              </if>
			              <if test="GROUPSEQ != null and GROUPSEQ != ''">
			              	AND  A.GROUPSEQ = #{GROUPSEQ}
			              </if>
			        ) D
				<where>
					<if test="RESERVE_TYPE != '' and RESERVE_TYPE != null">
						D.RESERVE_TYPE = #{RESERVE_TYPE}
					</if>
				</where>
	       <include refid="bottom"/>
    </select>
   
    <!--  그룹 사용자 발송조회 상세 리스트  -->   
    <select id="SelectGroupUserSendList" parameterType="kr.msp.admin.push.groupSend.dto.GroupSendDto" resultType="kr.msp.admin.push.groupSend.dto.GroupSendDto">
         <include refid="head"/>
           SELECT
			    A.SEQNO
			   ,CONVERT(VARCHAR(19), A.RESERVEDATE, 121) AS RESERVEDATE
			   ,CASE WHEN A.RESERVEDATE = A.REGDATE
			          THEN 'I'
			          ELSE 'R'
			    END AS RESERVE_TYPE
			   ,A.APPID
			   ,A.CUID
			   ,A.SENDERSEQ
			   ,(SELECT SENDERCODE
			       FROM T_PUSH_SENDER_INFO C
			      WHERE A.SENDERSEQ = C.SENDERSEQ) AS SENDERCODE
			   ,A.MESSAGE
			   ,CASE WHEN (SELECT COUNT(*)
			               FROM T_PUSH_COMPLETE B
			               WHERE A.SEQNO = B.SEQNO AND A.CUID = B.CUID AND B.RECEIVEACK = 'S') > 0
			         THEN 'Y'
			         ELSE 'N'
			    END AS SEND_YN
			   ,CASE WHEN (SELECT COUNT(*)
			               FROM T_PUSH_COMPLETE B
			               WHERE A.SEQNO = B.SEQNO AND A.CUID = B.CUID AND B.RECEIVEACK = 'R') > 0
			         THEN 'Y'
			         ELSE 'N'
			    END AS READ_YN
			   ,CONVERT(VARCHAR(19), A.REGDATE, 121) AS REGDATE
			   , ROW_NUMBER() OVER(ORDER BY A.SEQNO DESC) PAGE_KEY
			FROM T_PUSH_MESSAGE A
			WHERE SEQNO = #{SEQNO}
           <include refid="bottom"/>
    </select>

    <select id="SelectMsgSendInfo"  resultType="java.util.HashMap">
    select A.MESSAGE,A.SEQNO,B.GROUPNAME,ViewA.TOTCNT, ViewA.GROUPSEQ, CONVERT(VARCHAR(16), A.RESERVEDATE,121) RESERVEDATE
    from T_PUSH_MESSAGE_GROUP A, T_PUSH_USER_GROUP_INFO B,
        (select A.MSGGRPSEQNO,count(B.GROUPSEQ) as TOTCNT, B.GROUPSEQ
        from  T_PUSH_MESSAGE_GROUP A, T_PUSH_USER_GROUP B
        where A.GROUPSEQ=B.GROUPSEQ
        group by A.MSGGRPSEQNO,B.GROUPSEQ
        ) ViewA
    where A.GROUPSEQ=B.GROUPSEQ
    AND A.GROUPSEQ=ViewA.GROUPSEQ
    AND A.MSGGRPSEQNO=ViewA.MSGGRPSEQNO
    AND A.RESERVEDATE BETWEEN CONVERT(DATETIME, #{RESERVEDATE_S}) AND CONVERT(DATETIME, #{RESERVEDATE_E})
    <if test="MESSAGE != '' and MESSAGE != null">
    AND A.MESSAGE like '%' + #{MESSAGE} + '%'
    </if>
    order by SEQNO desc
    </select>

    <select id="SelectMsgSendSuccess"  resultType="java.util.HashMap">
        SELECT COUNT(SEQNO) AS TOTCNT, SEQNO from
        (select B.SEQNO
        from  T_PUSH_MESSAGE_GROUP A, T_PUSH_COMPLETE B
        where A.SEQNO=B.SEQNO
        AND A.RESERVEDATE BETWEEN CONVERT(DATETIME, #{RESERVEDATE_S}) AND CONVERT(DATETIME, #{RESERVEDATE_E})
        <if test="MESSAGE != '' and MESSAGE != null">
            AND A.MESSAGE like '%' + #{MESSAGE} + '%'
        </if>
        group by B.SEQNO, B.CUID)
        group BY SEQNO
    </select>

    <select id="SelectMsgSendFail"  resultType="java.util.HashMap">
        SELECT count(SEQNO) as TOTCNT, SEQNO
        FROM
          (select B.SEQNO
          from  T_PUSH_MESSAGE_GROUP A, T_PUSH_FAILED B
          where A.SEQNO=B.SEQNO
        AND A.RESERVEDATE BETWEEN CONVERT(DATETIME, #{RESERVEDATE_S}) AND CONVERT(DATETIME, #{RESERVEDATE_E})
        <if test="MESSAGE != '' and MESSAGE != null">
            AND A.MESSAGE like '%' + #{MESSAGE} + '%'
        </if>
          group by B.SEQNO, B.CUID)
        GROUP BY SEQNO
    </select>
</mapper>