<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.msp.admin.system.notice.mapper.NoticeManageDao">

	<resultMap type="kr.msp.admin.system.notice.dto.NoticeDto" id="NoticeDto">
		<result property="NO_NOTICE" column="notc_idx"/>
		<result property="NM_TITLE" column="title"/>
		<result property="CONTENTS" column="cont"/>
		<result property="ID_INSERT" column="reg_id"/>
		<result property="DT_INSERT" column="reg_dttm"/>
		<result property="ID_UPDATE" column="mod_id"/>
		<result property="DT_UPDATE" column="mod_dttm"/>
	</resultMap>
	
	<resultMap type="kr.msp.admin.system.notice.dto.NoticeAuthGroupDto" id="NoticeAuthGroupDto">
		<result property="NO_NOTICE" column="notc_idx"/>
		<result property="ID_GROUP" column="auth_grp_id"/>
		<result property="NM_GROUP" column="auth_grp_nm"/>
		<result property="AUTH_CHK" column="auth_chk"/>
	</resultMap>
	

<!--  ================================================================================================= -->
<!-- begin of paging query -->
<!--  ================================================================================================= -->
<sql id="head">
SELECT  *
FROM( 
	 SELECT ROW_NUMBER() OVER() AS RNUM
	 		, COUNT(*) OVER() AS TOT_CNT
	 		, A.*
     FROM(
   		  SELECT * 
   		  FROM(
</sql>
	
<!-- tail of paging query -->
<sql id="bottom">
		  ) 
     ) AS A
)
WHERE RNUM BETWEEN ((#{PAGE_NUM} - 1) *  #{PAGE_SIZE}) + 1 AND (#{PAGE_NUM} *  #{PAGE_SIZE})
</sql>
<!--  ================================================================================================= -->
<!-- end of paging query -->
<!--  ================================================================================================= -->
    
	
	<select id="SelectMainNoticeList" parameterType="java.lang.String" resultMap="NoticeDto">
		SELECT skip 0 first 10
		          A.NOTC_IDX
		         ,A.TITLE
		         ,CAST(A.REG_DTTM AS DATE) AS REG_DTTM
		         ,A.REG_ID
		         ,A.MOD_ID
		         ,CAST(A.MOD_DTTM AS DATE) AS MOD_DTTM
	     FROM TB_SYS_NOTC A
		     INNER JOIN TB_SYS_NOTC_AUTH B ON (A.NOTC_IDX = B.NOTC_IDX) 
		     INNER JOIN TB_SYS_USER_AUTH_GRP C   ON (B.AUTH_GRP_ID   = C.AUTH_GRP_ID)
		     WHERE C.USER_ID = #{S_ID_USER}
	     ORDER BY A.REG_DTTM DESC
	</select><!-- 완료 -->
	
	<select id="SelectMainNoticePopData" parameterType="java.lang.String" resultMap="NoticeDto">
		SELECT
	         A.NOTC_IDX
	        ,A.TITLE
	        ,A.CONT
	    FROM TB_SYS_NOTC A
	    WHERE NOTC_IDX  = #{NO_NOTICE}
	</select><!-- 완료 -->
	
	<!-- 공지사항 조회 -->
    <select id="SelectNoticeList" parameterType="kr.msp.admin.system.notice.dto.NoticeDto" resultMap="NoticeDto" >
        <include refid="head"/>
		SELECT
		     NOTC_IDX
		    ,TITLE
	        ,CONT
	        ,CONT AS CONTENTS_ORG
		    ,REG_ID
		    ,CAST(REG_DTTM AS DATE) AS REG_DTTM
		    ,MOD_ID
		    ,CAST(MOD_DTTM AS DATE) AS MOD_DTTM
		    ,REG_DTTM AS INSERT_DATE 
		FROM TB_SYS_NOTC
		<where>
			1 = 1
			<if test="NM_TITLE != null">
				AND TITLE LIKE '%' || #{NM_TITLE} || '%'
			</if>
			<if test="CONTENTS != null">
				AND CONT LIKE '%' || #{CONTENTS} || '%'
			</if>
		</where>
        ORDER BY INSERT_DATE DESC 
        <include refid="bottom"/>
    </select><!-- 완료 -->
    
	<!-- 공지사항 권한정보 조회 -->
    <select id="SelectNoticeAuthGroupList" parameterType="kr.msp.admin.system.notice.dto.NoticeAuthGroupParamDto"
    	resultMap="NoticeAuthGroupDto">
		SELECT
		     A.AUTH_GRP_ID
		    ,A.AUTH_GRP_NM
		    ,CASE WHEN B.NOTC_IDX IS NOT NULL 
		          THEN 'T'
		          ELSE 'F'
		     END AUTH_CHK
		FROM TB_SYS_AUTH_GRP A
		LEFT OUTER JOIN TB_SYS_NOTC_AUTH B ON ( A.AUTH_GRP_ID = B.AUTH_GRP_ID 
		                                             AND B.NOTC_IDX = #{NO_NOTICE})
    </select><!-- 완료 -->
    
    <!-- 신규번호 조회 -->
    <select id="SelectNewNoNotice" resultType="java.lang.String">
        <!-- 
        SELECT
             LPAD(NVL(MAX(NOTC_IDX), 0)+1, 10 , '0') AS NO_NOTCIE
        FROM TB_SYS_NOTC
         -->
        SELECT  LPAD(CAST((NVL(MAX(NOTC_IDX), 0)+1) AS CHAR),  10, '0')
	    FROM TB_SYS_NOTC
    </select><!-- 완료 -->
    
    <!-- 공지사항 등록-->
    <insert id="InsertNotice" parameterType="kr.msp.admin.system.notice.dto.NoticeDto">
		INSERT INTO TB_SYS_NOTC(
		             NOTC_IDX
		            ,TITLE
		            ,CONT
		            ,REG_ID
		            ,REG_DTTM
		            ,MOD_DTTM
		        )VALUES(
		             #{NO_NOTICE}
		            ,#{NM_TITLE}
		            ,#{CONTENTS}
		            ,#{ID_INSERT}
		            ,CURRENT
		            ,CURRENT
		        )
    </insert><!-- 완료 -->
    
    <!-- 팝업 수정 -->
    <update id="UpdateNotice" parameterType="kr.msp.admin.system.notice.dto.NoticeDto">
		UPDATE TB_SYS_NOTC
		    SET TITLE  = #{NM_TITLE}
		       ,CONT  = #{CONTENTS}
		       ,MOD_ID = #{ID_UPDATE}
		       ,MOD_DTTM = CURRENT
		WHERE NOTC_IDX = #{NO_NOTICE}
    </update><!-- 완료 -->
    
    <!-- 공지사항 권한정보 삭제 -->
    <delete id="DeleteNoticeAuthGroup" parameterType="kr.msp.admin.system.notice.dto.NoticeAuthGroupDto">
        DELETE FROM TB_SYS_NOTC_AUTH
        WHERE NOTC_IDX = #{NO_NOTICE}
          AND AUTH_GRP_ID = #{ID_GROUP}
    </delete><!-- 완료 -->
    
    <!-- 공지사항 권한정보 등록-->
    <insert id="InsertNoticeAuthGroup" parameterType="kr.msp.admin.system.notice.dto.NoticeAuthGroupDto">
		INSERT INTO TB_SYS_NOTC_AUTH(
		             NOTC_IDX
		            ,AUTH_GRP_ID
		        )VALUES(
		             #{NO_NOTICE}
		            ,#{ID_GROUP}
		        )
    </insert><!-- 완료 -->
    
     <!-- 공지사항삭제 -->
    <delete id="DeleteNotice" parameterType="kr.msp.admin.system.notice.dto.NoticeDto">
        DELETE FROM TB_SYS_NOTC
        WHERE NOTC_IDX = #{NO_NOTICE}
    </delete><!-- 완료 -->
    
    <!-- 공지사항 권한정보 삭제(전체) -->
    <delete id="DeleteNoticeAuthGroupAll" parameterType="kr.msp.admin.system.notice.dto.NoticeDto">
        DELETE FROM TB_SYS_NOTC_AUTH
        WHERE NOTC_IDX = #{NO_NOTICE}
    </delete><!-- 완료 -->
</mapper>